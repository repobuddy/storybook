---
description:
globs:
alwaysApply: false
---
# Self-Improving Cursor Rules

This rule defines how to maintain and improve the Cursor Rules system over time. It works in conjunction with the [Cursor Rules Management](mdc:.cursor/rules/meta/cursor_rules.mdc) guide.

When you use this rule file, let me know this rule file is being used in the chat.

## Core Principles

1. **Continuous Improvement**
   - Regularly review and update rules based on team feedback
   - Track rule effectiveness and usage patterns
   - Remove obsolete or redundant rules
   - Merge related rules when appropriate

2. **Rule Quality Metrics**
   - Clarity: Rules should be easily understood
   - Specificity: Rules should have clear scope and purpose
   - Maintainability: Rules should be easy to update
   - Impact: Rules should solve real problems

## Improvement Process

1. **Rule Review Cycle**
   - Monthly review of rule effectiveness
   - Quarterly deep-dive into rule organization
   - Annual comprehensive rule system audit

2. **Feedback Collection**
   - Track rule usage statistics
   - Collect user feedback on rule clarity
   - Monitor rule-related issues and questions
   - Document common rule-related problems

3. **Rule Updates**
   - Version control all rule changes
   - Document reasons for rule modifications
   - Update related rules when one rule changes
   - Maintain change history in rule comments

## Rule Maintenance Guidelines

1. **Rule Organization**
   - Keep related rules together
   - Maintain clear rule hierarchies
   - Use consistent naming conventions
   - Update master index with changes

2. **Rule Documentation**
   - Keep examples current
   - Update references to other rules
   - Maintain clear rule descriptions
   - Document rule dependencies

3. **Rule Testing**
   - Test rule effectiveness
   - Verify rule compatibility
   - Check rule conflicts
   - Validate rule formatting

## Code Examples

```markdown
# ✅ DO: Clear rule structure
---
description: Specific, clear purpose
globs: relevant/path/**/*
alwaysApply: false
---

# Rule Title

Clear explanation with examples.

# ❌ DON'T: Vague or overlapping rules
---
description: General purpose
globs: **/*
alwaysApply: true
---

# Rule Title

Unclear scope and purpose.
```

## Rule Improvement Checklist

- [ ] Rule has clear, specific purpose
- [ ] Examples are current and relevant
- [ ] Dependencies are documented
- [ ] Related rules are cross-referenced
- [ ] Rule is properly categorized
- [ ] Master index is updated
- [ ] Rule follows naming conventions
- [ ] Rule has appropriate glob patterns
- [ ] Rule includes usage examples
- [ ] Rule is properly formatted

## Rule Retirement Process

1. **Identify Candidates**
   - Unused rules
   - Redundant rules
   - Outdated rules
   - Conflicting rules

2. **Review Impact**
   - Check rule dependencies
   - Assess removal consequences
   - Plan migration if needed

3. **Execute Retirement**
   - Document retirement reason
   - Update master index
   - Remove rule file
   - Update references

## Best Practices

1. **Rule Creation**
   - Start with clear purpose
   - Include practical examples
   - Define clear scope
   - Consider maintenance needs

2. **Rule Updates**
   - Version control changes
   - Document modifications
   - Update dependencies
   - Test rule effectiveness

3. **Rule Organization**
   - Maintain clear structure
   - Use consistent formatting
   - Keep related rules together
   - Update master index

## Rule System Health Metrics

1. **Usage Metrics**
   - Rule application frequency
   - Rule effectiveness
   - User feedback
   - Issue resolution rate

2. **Maintenance Metrics**
   - Update frequency
   - Rule conflicts
   - Documentation completeness
   - Cross-reference accuracy

3. **Quality Metrics**
   - Rule clarity
   - Example relevance
   - Documentation quality
   - Rule consistency
