---
description: When creating or updating cursor rules
globs:
alwaysApply: false
---
# Cursor Rules Management

How to add and manage cursor rules in the project.

When you use this rule, let me know this rule file is being used in the chat by mentioning the filename.

## Directory Structure

Always place rule files under `PROJECT_ROOT/.cursor/rules/`:

```
.cursor/rules/
├── react_component_spec.mdc
├── storybook_stories.mdc
├── component_spec_template.mdc
├── cursor_rules.mdc
└── master.mdc          # Central index of all rules
```

## Naming Conventions

1. **File Names**:
   - Use snake_case for filenames
   - Always use `.mdc` extension
   - Make names descriptive of the rule's purpose

## Rule File Structure

All rule files should follow this structure:

```markdown
---
description: Clear, one-line description of what the rule enforces
globs: path/to/files/*.ext, other/path/**/*
alwaysApply: boolean
---

## Rule Title

Main content explaining the rule with markdown formatting.

1. Step-by-step instructions
2. Code examples
3. Guidelines
4. Add this instruction: "When you use this rule file, let me know this rule file is being used in the chat."

## Code Examples

- Use language-specific code blocks

```typescript
// ✅ DO: Show good examples
const goodExample = true;

// ❌ DON'T: Show anti-patterns
const badExample = false;
```

## Adding New Rules

When adding new rules:

1. **Create the Rule File**: Follow the standard rule file structure

2. **Update Master Index**: Add the new rule to [master.mdc](mdc:.cursor/rules/master.mdc) with proper categorization

3. **Set Rule Properties**:
   - Default rule type to "Agent Requested"
   - Add clear description of the rule's purpose
   - Include appropriate glob patterns if needed
   - Add the phrase "mention this rule is being used"

## Best Practices

1. **Keep Rules Focused**: Each rule should have a single, clear purpose
2. **Use Examples**: Include both good and bad examples
3. **Cross-Reference**: Link to related rules using `mdc:` syntax
4. **Regular Updates**: Keep rules current with project evolution
5. **Clear Documentation**: Write rules that are easy to understand and follow

## File Location Rules

- **Never** place rule files in the project root
- **Never** place rule files outside `.cursor/rules/`
- **Always** update the master index when adding new rules
